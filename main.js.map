{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/form/form.component.ts","./src/app/form/form.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'reactive-form';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { FormComponent } from './form/form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { FormGroup, FormControl, Validators, FormArray, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html'\n})\nexport class FormComponent implements OnInit {\n\n  services = [\n    { id: 1, service: 'Servicio #1' },\n    { id: 2, service: 'Servicio #2' },\n    { id: 3, service: 'Servicio #3' },\n    { id: 4, service: 'Servicio #4' },\n    { id: 5, service: 'Servicio #5' },\n  ];\n\n  subservices = [\n    { id: 1, subservice: 'Subservicio #1' },\n    { id: 2, subservice: 'Subservicio #2' },\n    { id: 3, subservice: 'Subservicio #3' },\n    { id: 4, subservice: 'Subservicio #4' },\n    { id: 5, subservice: 'Subservicio #5' },\n  ];\n\n  parts = [\n    { id: 1, part: 'Part #1' },\n    { id: 2, part: 'Part #2' },\n    { id: 3, part: 'Part #3' },\n    { id: 4, part: 'Part #4' },\n    { id: 5, part: 'Part #5' },\n  ];\n\n  form: FormGroup;\n\n  constructor( private fb: FormBuilder) {\n    this.createForm();\n  }\n\n  ngOnInit(): void {}\n\n  createForm(){\n    this.form = this.fb.group({\n      servicesArray: this.fb.array([])\n    })\n  }\n\n   servicesArray(){\n    return this.form.get('servicesArray') as FormArray;\n  }\n\n  newService(){\n    return this.fb.group({\n      serviceName: '',\n      servicePrice: '',\n      subServices: this.fb.array([])\n    });\n  }\n\n  addService(){\n    this.servicesArray().push(this.newService());\n    // console.log( (this.form.get('servicesArray') as FormArray).controls );\n  }\n\n  removeService(idx:number){\n    this.servicesArray().removeAt(idx);\n  }\n\n  subServicesArray(idx:number){\n    return this.servicesArray().at(idx).get('subServices') as FormArray;\n  }\n\n  newSubService(){\n    return this.fb.group({\n      subServiceName: '',\n      subServicePrice: '',\n      parts: this.fb.array([])\n    });\n  }\n  \n  addSubService(idx:number){\n    this.subServicesArray(idx).push(this.newSubService());\n    console.log( (    (this.form.get('servicesArray') as FormArray).at(idx).get('subServices') as FormArray).controls   );\n  }\n\n  removeSubService(idxSer:number, idxSub:number){\n    this.subServicesArray(idxSer).removeAt(idxSub);\n  }\n\n  partsArray(indexSubService: number){\n    return this.subServicesArray(indexSubService).at(indexSubService).get('parts') as FormArray;\n    // return ( (this.form.get('servicesArray') as FormArray ).at(indexService).get('subServices') as FormArray).at(indexSubService).get('parts') as FormArray;\n  }\n\n  newPartArray(){\n    return this.fb.group({\n      subPartServiceName: '',\n      subPartServicePrice: ''\n    });\n  }\n\n  addPartSubService(indexSubSerice: number){\n    this.partsArray(indexSubSerice).push(this.newPartArray())\n    // console.log( ( (this.form.get('servicesArray') as FormArray).at(indexService).get('subServices') as FormArray).at(indexSubSerice).get('parts') as FormArray  );\n  }\n\n  // Remover sub servicio\n  // removePartSubService(idSub:number, idPart:number){\n  //   this.partsArray(idSub).removeAt(idPart);\n  // }\n\n  solicitarServicio(){\n    // console.log(this.form );\n\n    // if( this.form.invalid ){\n\n    //   return Object.values( this.form.controls ).forEach( control  =>{\n    //     if( control instanceof FormGroup ){\n    //       Object.values( control.controls ).forEach( control => {\n    //         control.markAsTouched();\n    //       });\n    //     } else {\n    //       control.markAsTouched();\n    //     }\n    //   });\n    // }\n\n    // Re establecer valores después de enviar la información\n    console.log(this.form.value);\n    this.form.reset();\n\n\n  }\n\n}\n","<div class=\"container\">\n    \n    <div class=\"row\">\n\n        <div class=\"col-md-12 mt-4 mb-2\">\n            <h2>Funcionalidad Servicios</h2>\n        </div>\n\n        <div class=\"col-md-12\">\n\n            <form [formGroup]=\"form\" (ngSubmit)=\"solicitarServicio()\">\n\n                <div formArrayName=\"servicesArray\">\n                    <div *ngFor=\"let service of servicesArray().controls; let idxSer = index\">\n                        <div [formGroupName]=\"idxSer\">\n\n                            <table class=\"table\">\n                                <thead class=\"thead-dark\">\n                                  <tr>\n                                    <th colspan=\"4\">Servicio Detalle #{{ idxSer + 1 }}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n\n                                  <tr style=\"text-align: center;\">\n                                    <td>\n                                        <select class=\"form-control\" formControlName=\"serviceName\">\n                                            <option value=\"\" selected>Selecciones un servicio</option>\n                                            <option *ngFor=\"let service of services; let i = index\" value=\"{{ service.id }}\">\n                                                {{ service.service }}\n                                            </option>\n                                        </select>\n                                    </td>\n                                    <td>\n                                        <input class=\"form-control\" type=\"number\" placeholder=\"Precio\" formControlName=\"servicePrice\">\n                                    </td>\n                                    <td>\n                                        <button (click)=\"removeService(idxSer)\" class=\"btn btn-danger\" type=\"button\">Eliminar Servicio</button>\n                                    </td>\n                                    <td>\n                                        <button (click)=\"addSubService(idxSer)\" class=\"btn btn-primary\" type=\"button\">Agregar sub servicio</button>\n                                    </td>\n                                  </tr>\n\n                                  <tr *ngIf=\"subServicesArray(idxSer).length > 0\">\n                                    <td colspan=\"4\">\n                                        <table class=\"table\">\n                                            <thead class=\"thead-light\">\n                                              <tr>\n                                                <th colspan=\"4\">Sub servicios</th>\n                                              </tr>\n                                            </thead>\n                                        </table>\n                                        <tbody formArrayName=\"subServices\">\n                                                <tr style=\"text-align: center;\"\n                                                *ngFor=\"let subservice of subServicesArray(idxSer).controls; let idxSub = index\">\n                                                    <td colspan=\"4\">\n                                                        <tr [formGroupName]=\"idxSub\">\n                                                            <td>\n                                                                <select class=\"form-control\" formControlName=\"subServiceName\">\n                                                                    <option value=\"\" selected>Selecciones un sub servicio</option>\n                                                                    <option *ngFor=\"let subservice of subservices; let i = index\" value=\"{{ subservice.id }}\">\n                                                                        {{ subservice.subservice }}\n                                                                    </option>\n                                                                </select>\n                                                            </td>\n                                                            <td>\n                                                                <input class=\"form-control\" type=\"number\" placeholder=\"Precio\" formControlName=\"subServicePrice\">\n                                                            </td>\n                                    \n                                                            <td>\n                                                                <button (click)=\"removeSubService(idxSer, idxSub)\" class=\"btn btn-danger\" type=\"button\">Eliminar Sub Servicio</button>\n                                                            </td>\n\n                                                            <td>\n                                                                <button (click)=\"addPartSubService(idxSub)\" class=\"btn btn-primary\" type=\"button\">Agregar partes</button>\n                                                            </td>\n                                                        </tr>\n\n                                                        <tr>\n                                                            <td colspan=\"4\">\n                                                                <table class=\"table\">\n                                                                    <thead class=\"thead-light\">\n                                                                      <tr>\n                                                                        <th colspan=\"4\">Partes</th>\n                                                                      </tr>\n                                                                    </thead>\n                                                                    <!-- <tbody formArrayName=\"parts\">\n                                                                        <tr style=\"text-align: center;\"\n                                                                        *ngFor=\"let part of partsArray(idxSub).controls; let idxPart = index\">\n                                                                            <td colspan=\"4\">\n                                                                                <tr [formGroupName]=\"idxPart\">\n                                                                                    <td>\n                                                                                        <select class=\"form-control\" formControlName=\"subPartServiceName\">\n                                                                                            <option value=\"\" selected>Selecciones un sub servicio</option>\n                                                                                            <option value=\"1\" selected>Parte #1</option>\n                                                                                        </select>\n                                                                                    </td>\n                                                                                    <td>\n                                                                                        <input class=\"form-control\" type=\"number\" placeholder=\"Precio\" formControlName=\"subPartServicePrice\">\n                                                                                    </td>\n                                                            \n                                                                                    <td>\n                                                                                        <button class=\"btn btn-danger\" type=\"button\">Eliminar parte</button>\n                                                                                    </td>\n                                                                                </tr>\n                                                                            </td>\n                                                                        </tr>\n                                                                    </tbody> -->\n                                                                </table>\n                                                            </td>\n                                                        </tr>\n                                                    </td>\n\n                                                </tr>\n                                        </tbody>\n                                    </td>\n                                  </tr>\n\n                                </tbody>\n                              </table>\n\n\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <button type=\"button\"\n                                class=\"btn btn-block btn-primary mt-4\"\n                                (click)=\"addService()\">\n                                Agregar Servicio\n                            </button>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <button type=\"submit\"\n                            class=\"btn btn-success\"\n                            (click)=\"solicitarServicio()\">\n                            Enviar Solicitud\n                        </button>\n                </div>\n\n            </form>\n        </div>\n\n    </div>\n\n    <pre>\n        {{ form.value | json }}\n    </pre> \n    \n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormComponent } from './form/form.component';\n\nconst routes: Routes = [\n  { path: 'form', component: FormComponent },\n  { path: '**',   redirectTo: 'form', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}